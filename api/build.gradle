plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id 'checkstyle'
}

group = 'com.uas'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'
    implementation "io.jsonwebtoken:jjwt:0.9.1"
    //https://search.maven.org/artifact/com.google.code.gson/gson/2.8.9/jar
    implementation 'com.google.code.gson:gson:2.8.6'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.20.2'
    runtimeOnly 'com.h2database:h2'
    // https://mvnrepository.com/artifact/com.itextpdf/itextpdf
    implementation group: 'com.itextpdf', name: 'itextpdf', version: '5.5.13.3'
    // https://mvnrepository.com/artifact/javax.mail/javax.mail-api
    implementation group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'
    // https://mvnrepository.com/artifact/com.structurizr/structurizr-core
    implementation 'com.structurizr:structurizr-core:1.10.0'
    // https://mvnrepository.com/artifact/com.structurizr/structurizr-client
    implementation 'com.structurizr:structurizr-client:1.10.0'
    // https://mvnrepository.com/artifact/com.structurizr/structurizr-spring
    implementation 'com.structurizr:structurizr-spring:1.3.5'




}
checkstyle {
    toolVersion = 9.3
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
    checkstyleTest.enabled = false
}

tasks.named('test') {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir("reports")
}
jacocoTestReport {

    reports {
        xml.enabled false
        csv.enabled true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "com/uas/api/mapper/*",
                    "com/uas/api/services/auth/*",
                    "com/uas/api/models/auth/*",
                    "com/uas/api/models/entities/*",
                    "com/uas/api/ApiApplication.java"
            ])
        }))
    }
}
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.6
            }
        }
    }
}
task buildAndReport {
    dependsOn build, jacocoTestReport, jacocoTestCoverageVerification
}
jar {
    manifest {
        attributes 'Main-Class' : 'com.uas.api.ApiApplication.java'
    }
}